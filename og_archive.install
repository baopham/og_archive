<?php

/**
 * @file
 * Install file to intall prerequisite database elements.
 */

/**
 * Create flag 'archive'
 */
function og_archive_setflag() {
  $group_bundles = og_get_all_group_bundle();
  $flag = flag_flag::factory_by_entity_type('node');
  // Absolutely required, will break your site if not added properties.
  $flag->name = 'archive';
  $flag->title = 'Archive';
  // Properties required by the UI.
  $flag->roles = array(
    'flag' => array(DRUPAL_AUTHENTICATED_RID),
    'unflag' => array(DRUPAL_AUTHENTICATED_RID),
  );
  $flag->types = array_keys($group_bundles['node']);
  $flag->flag_short = 'Archive this group';
  $flag->unflag_short = 'Unarchive this group';
  $flag->global = TRUE;
  $flag->flag_long = 'You may archive this group. If you archive this group you may only view its content but cannot add/delete or update.';
  $flag->flag_message = 'You may archive this group. If you archive this group you may only view its content but cannot add/delete or update.';
  $flag->unflag_long = 'You may unarchive this group. If you unarchive this group you can edit and delete the group.';
  $flag->unflag_message = 'You may unarchive this group. If you unarchive this group you can edit and delete the group.';
  $flag->show_on_form = TRUE;
  $flag->show_on_node = TRUE;
  $flag->show_on_teaser = TRUE;
  $flag->link_type = 'toggle'; // For JS link. Other options: 'normal' and 'confirm'.
  $flag->locked = array('show_on_teaser', 'name', 'types', 'global', 'roles');
  // Save the flag.
  $flag->save();
}

/**
 * Implementation of hook_install.
 *
 */
function og_archive_install() {
  $defaults = array('roles_archive' => array(2), 'archive_group_nodes' => 1, 'archive_associated_nodes' => 1, 'archive_associated_nodes_creation' => 1, 'archive_edit_users' => 1);
  variable_set('og_archive_settings', $defaults);
  og_archive_setflag();
}

/**
 * Implementation of hook_uninstall.
 *
 */
function og_archive_uninstall() {
  variable_del('og_archive_settings');
  // Delete flag 'archive'
  if (FALSE !== ($flag = flag_get_flag("archive")))
    $flag->delete();
}

